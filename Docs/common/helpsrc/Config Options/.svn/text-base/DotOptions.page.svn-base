/** \page DotOptions

!!! Configuration options related to the dot tool.



||ENABLE_DOT_GRAPHS|If set to YES then DoxyS will assume the dot tool is available from the path. This tool is part of Graphviz, a graph visualization toolkit from AT&T and Lucent Bell Labs. The other options in this section have no effect if this option is set to NO. \n #Default value:#\n $YES$
||DOT_PATH|The tag DOT_PATH can be used to specify the path where the dot tool can be found. If left blank, it is assumed the dot tool can be found on the path. 
||CLASS_DIAGRAMS|If the CLASS_DIAGRAMS tag is set to YES (the default) DoxyS will generate a inheritance diagram for classes with base or super classes. Setting the tag to NO turns the diagrams off. Note that this option is superceded by the ENABLE_DOT_GRAPHS option below. This is only a fallback. It is recommended to install and use dot, since it yields more powerful graphs. \n #Default value:#\n $YES$
||HIDE_UNDOC_RELATIONS|If set to YES, the inheritance and collaboration graphs will hide inheritance and usage relations if the target is undocumented or is not a class. \n #Default value:#\n $YES$
||CLASS_GRAPH|If the CLASS_GRAPH and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will generate a graph for each documented class showing the direct and indirect inheritance relations. Setting this tag to YES will force the the CLASS_DIAGRAMS tag to NO.\n #Default value:#\n $YES$
||COLLABORATION_GRAPH|If the COLLABORATION_GRAPH and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will generate a graph for each documented class showing the direct and indirect implementation dependencies (inheritance, containment, and class references variables) of the class with other documented classes. \n #Default value:#\n $YES$
||UML_LOOK|If the UML_LOOK tag is set to YES DoxyS will generate inheritance and collaboration diagrams in a style similiar to the OMG's Unified Modeling Language. \n #Default value:#\n $NO$
||TEMPLATE_RELATIONS|If set to YES, the inheritance and collaboration graphs will show the relations between templates and their instances. \n #Default value:#\n $YES$
||INCLUDE_GRAPH|If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will generate a graph for each documented file showing the direct and indirect include dependencies of the file with other documented files. \n #Default value:#\n $YES$
||INCLUDED_BY_GRAPH|If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will generate a graph for each documented header file showing the documented files that directly or indirectly include this file. \n #Default value:#\n $YES$
||CALL_GRAPH|If the CALL_GRAPH and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will generate a call dependency graph for every global function or class method. Note that enabling this option will significantly increase the time of a run. So in most cases it will be better to enable call graphs for selected functions only using the callgraph command.\n #Default value:#\n $YES$
||DIR_GRAPH|If the CALL_GRAPH and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will generate a directory graph for for every directory. \n #Default value:#\n $YES$
||GRAPHICAL_HIERARCHY|If the GRAPHICAL_HIERARCHY and ENABLE_DOT_GRAPHS tags are set to YES then DoxyS will graphical hierarchy of all classes instead of a textual one. \n #Default value:#\n $YES$
||DOT_IMAGE_FORMAT|The DOT_IMAGE_FORMAT tag can be used to set the image format of the images generated by dot. Possible values are png, jpg, or gif. If left blank png will be used. \n #Default value:#\n $png$
||DOTFILE_DIRS|The DOTFILE_DIRS tag can be used to specify one or more directories that contain dot files that are included in the documentation (see the dotfile command). 
||MAX_DOT_GRAPH_WIDTH|The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width (in pixels) of the graphs generated by dot. If a graph becomes larger than this value, DoxyS will try to truncate the graph, so that it fits within the specified constraint. Beware that most browsers cannot cope with very large images. \n #Default value:#\n $1024$
||MAX_DOT_GRAPH_HEIGHT|The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height (in pixels) of the graphs generated by dot. If a graph becomes larger than this value, DoxyS will try to truncate the graph, so that it fits within the specified constraint. Beware that most browsers cannot cope with very large images. \n #Default value:#\n $1024$
||MAX_DOT_GRAPH_DEPTH|The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs generated by dot. A depth value of 3 means that only nodes reachable from the root by following a path via at most 3 edges will be shown. Nodes that lay further from the root node will be omitted. Note that setting this option to 1 or 2 may greatly reduce the computation time needed for large code bases. Also note that a graph may be further truncated if the graph's image dimensions are not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT). If 0 is used for the depth value (the default), the graph is not depth-constrained. \n #Default value:#\n $0$
||CENTER_ALIGN_DOT_IMAGES|If set to YES, then all dot images are centered. Otherwise the images will be left-aligned. \n #Default value:#\n $NO$
||DOT_CLEANUP|If the DOT_CLEANUP tag is set to YES (the default) DoxyS will remove the intermediate dot files that are used to generate the various graphs. \n #Default value:#\n $YES$
*/
